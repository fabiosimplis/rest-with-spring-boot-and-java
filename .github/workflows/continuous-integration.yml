# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Docker hub Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credencials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Application JAR
      working-directory: ./
      run: mvn clean package
    
    - name: Docker compose Build
      working-directory: ./
      run: docker compose build

    - name: Tag, and push image to Amazon ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:latest ${{ secrets.IMAGE_REPO_URL }}:latest
        
        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-and-java:latest

